// LAB1_2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Написать функцию для вычисления суммы элементов квадратной матрицы, которые расположены ниже главной диагонали.
//С ее помощью найти максимальное значение такой суммы в n матрицах.

#include <iostream>
using namespace std;

const int row = 3;
const int col = 3;

int fun1(int n, ...)
{
	int* p = &n;   // в указатель посылаем адрес 1 элемента матрицы
	int s = 0, A[row][col];
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			A[i][j] = *(p++);   // посылаем значения элементов в матрицу  
		}
	}
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < i; j++)
		{
			s = s + A[i][j];   // сумма элементов под главной диагональю
		}
	}
	return s;   // возвращаем сумму
}
void main()
{
	cout << fun1(1, 2, 3, 4, 5, 6, 7, 8, 9) << endl;
	cout << fun1(11, 0, 10, 15, 42, 60, 0, 3, 888) << endl;
	cout << fun1(9000, 5, 312, 16, 666, 4, 34, 77, 1234) << endl;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
